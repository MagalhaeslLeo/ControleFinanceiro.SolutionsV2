@using X.PagedList.Mvc.Core
@model ControleFinanceiro.Servicos.ViewModel.PaginacaoViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="card card-custom">
    <div class="card-header card-header-custom">
        <h3 class="card-title">
            Usuário
        </h3>
        <div class="card-adicionar">
            <a data-target="#createModal" data-toggle="tooltip" data-placement="top" data-original-title="Nova Despesa" data-url="@Url.Action("AdicionarUsuario", "Usuario")" class="icone-adicionar botaoMostrarModal">
                <i class="bi bi-plus-square-fill"></i>
                Adicionar
            </a>
        </div>
    </div>

    <div class="card-body">
        <div class="tabela">
            <table class="table">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">
                            @Html.DisplayName("Nome do Usuário")
                        </th>
                        <th scope="col">
                            @Html.DisplayName("E-mail")
                        </th>
                        <th scope="col">
                            @Html.DisplayName("Senha")
                        </th>
                        <th scope="col">
                            @Html.DisplayName("Ações")
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var usuario in Model.Usuarios)
                    {
                        <tr>
                            <td scope="row">@usuario.NomeUsuario</td>
                            <td>@usuario.EmailUsuario</td>
                            <td>@usuario.SenhaUsuario</td>
                            <td>
                                <a data-target="#consultarModal_@usuario.Id" data-toggle="tooltip" data-placement="top"
                               data-original-title="Consultar Usuario" data-url="@Url.Action("ObterUsuarioPorId","Usuario",
                                new {id = usuario.Id})" class="icones-tabela botaoMostrarModal">
                                    <i class="bi bi-eye"></i>
                                </a>
                                @await Html.PartialAsync("_ConsultarUsuario", usuario)

                                <a data-target="#editarModal_@usuario.Id" data-toggle="tooltip" data-placement="top"
                               data-original-title="Editar Usuario" data-url="@Url.Action("AdicionarUsuario, Usuario",
                               new{id = usuario.Id})" class="icones-tabela botaoMostrarModal">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                @await Html.PartialAsync("_EditarUsuario", usuario)

                                <a data-target="#deletarModal_@usuario.Id" data-toggle="tooltip" data-placement="top"
                               data-original-title="Editar Usuario" data-url="@Url.Action("StatusDeletado", "Usuario",
                               new{id = usuario.Id})" class="icones-tabela botaoMostrarModal">
                                    <i class="bi bi-trash"></i>
                                </a>
                                @await Html.PartialAsync("_StatusDeletado", usuario)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- Controles de paginação -->
        <div class="d-flex justify-content-end">
            @Html.PagedListPager(Model.Usuarios, page => Url.Action("ObterTodosUsuarios", new { page }), new PagedListRenderOptions
            {
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            LinkToPreviousPageFormat = "Anterior",
            LinkToNextPageFormat = "Próximo",
            LinkToFirstPageFormat = "Primeiro",
            LinkToLastPageFormat = "Último",
            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
            DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
            DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded
            })
        </div>
    </div>
</div>
@await Html.PartialAsync("_AdicionarUsuario", new ControleFinanceiro.Servicos.EntidadeServico.UsuarioVO())
